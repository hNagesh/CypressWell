import CommonMethod from '../../../support/CommonMethod'
/// <reference types="cypress" />
beforeEach(() => {
    CommonMethod.beforeTest()
})
//////////////////////////////Verifying WELL Checklist page fields////////////////////////////////////////////////////
Given('User navigate to the Dhashboard page by logging in to wellcertified', function () {
    CommonMethod.loginpage()
    cy.fixture('HSRId').then(function (projectid) {
        this.projectid = projectid
        cy.wait(2000)
        cy.xpath(this.locator.projectMenu).click()
        cy.wait(1000)
        cy.wait(2000)
        cy.xpath(this.locator.Wellhealthsafety).click()
        cy.wait(2000)
        cy.contains('Apply').click({ force: true })
        cy.xpath(this.locator.idSearch).type(this.projectid.WELLHealthSafety)
        cy.wait(2000)
        cy.contains('Apply').click({ force: true })
        cy.wait(3000)
        cy.xpath(this.locator.projectidcompare).invoke('text').then((projectidcompare)=>{
            expect(projectidcompare.trim()).to.equal(this.projectid.WELLHealthSafety)
            })
        cy.wait(2000)
        cy.xpath(this.locator.hsrstatuscompare).invoke('text').then((status)=>{
            expect(status.trim()).to.equal("Registered")
            })
        cy.contains(this.projectid.WELLHealthSafety).click({ force: true })
        cy.wait(2000)
        cy.contains('Checklist').should('be.visible')
    })
})
When('User clicks on Checklist tab', function () {
    cy.contains('Checklist').should('be.visible').click({ force: true })
})
Then('User redirects to Checklist Page successfully', function () {
    cy.contains('Customize your checklist').should('be.visible')
})
And('User verifies Checklist page fields', function () {
    cy.contains('SELECT 15 FEATURES').should('be.visible')
    cy.contains('UPLOAD DOCUMENTS').should('be.visible')
    cy.contains('SUBMIT FOR REVIEW').should('be.visible')
    cy.xpath(this.locator.Responsebtn).should('be.visible')
    cy.xpath(this.locator.Verificationbtn).should('be.visible')
    cy.xpath(this.locator.hsrtoggleMetricbtn).should('be.visible')
    cy.xpath(this.locator.hsrexpandorcollapseRows).should('be.visible')
    cy.xpath(this.locator.hsrdownloadbtn).should('be.visible')
    cy.xpath(this.locator.Progresspercentage).should('be.visible')
    cy.wait(2000)
    cy.xpath(this.locator.hsrChecklist).should('have.length', 28)
})
/////////////////////////////////////Verifying Expand/Collapse Rows in WELLs Checklist page/////////////////////////////////////////////////////////////
Given('User is on WELL Checklist page', function () {
    cy.contains('Customize your checklist').should('be.visible')
})
When('User clicks on ExpandCollapse Rows button', function () {
    cy.xpath(this.locator.expandorcollapseRows).click({ force: true })
})
Then('User verifies the expanded rows in Checklist page', function () {
    cy.contains('Support Handwashing').should('be.visible')  
    cy.xpath(this.locator.expandorcollapseRows).click({ force: true })    
})
////////////////////////////////////Verifying progress bar by Selecting YES pursue status////////////////////////////////////////////////////////////
When('User verifies the status count in progress bar by Selecting YES,May Be and No pursue status', function () {
    cy.xpath(this.locator.prepursuesYes).invoke('text').then((status)=>{
        expect(status).to.equal('0 Yes')
        })
        cy.xpath(this.locator.prepursueMaybe).invoke('text').then((status)=>{
            expect(status.trim()).to.equal('0 Maybe')
            })
            cy.xpath(this.locator.prepursueNo).invoke('text').then((status)=>{
                expect(status.trim()).to.equal('0 No')
                })
})
Then('User verifies the percentage in progress bar by Selecting YES pursue status', function () {
    
})
/////////////////////////////Verifying Requirements in Checklist part/////////////////////////////////////////////////////////////////////
When('User clicks on Checklist part', function () {
    cy.contains('Support Handwashing').click({ force: true })
})
Then('User verifies the Requirements fields', function () {
    cy.contains('Requirements').should('be.visible')
    cy.contains('For Commercial Kitchen Spaces & Commercial Dining Spaces').scrollIntoView().should('be.visible')
    cy.contains('WELL Core Guidance:').scrollIntoView().should('be.visible')
    cy.wait(2000)
})
///////////////////////////////////////Verifying Resources in Checklist part///////////////////////////////////////////////////////////
Given('User navigates to Resources in Checklist part', function () {
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.contains('Resources').scrollIntoView().should('be.visible')
    cy.wait(2000)
    cy.xpath(this.locator.checklistResources).scrollIntoView().should('be.visible').click({ force: true })
})
Then('User verifies the Resources fields', function () {
    cy.contains('Resources').scrollIntoView().should('be.visible')
    cy.contains('Sample Documentation').should('be.visible')
})
//////////////////////////////////Verifying Documents Upload field////////////////////////////////////
Given('User navigates to Documents in Checklist part', function (){
    cy.contains('Requirements').scrollIntoView().click({ force: true })
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
})
When('User clicks plus icon for document uploaded', function (){
    cy.xpath(this.locator.checklistDocbtn).scrollIntoView().click({ force: true })
})
Then('User verifies the Add Documents fields', function (){
    cy.xpath(this.locator.checklistverificationdropdown).scrollIntoView().should('be.visible')
   // cy.xpath(this.locator.scorecarddocupload).should('be.visible')
})
And('User selects verification method', function (){
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.FilterbyVerification, { force: true })
})
And('User upload document', function (){
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
})
And('User clikcs on Submit button and verifies the uploaded document', function (){
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(5000)
    cy.xpath(this.locator.checklistuploaddoc).should('be.visible', { force: true })
})
And('User delete the uploaded document', function (){
    cy.xpath(this.locator.checklistdocdelete).scrollIntoView().click({ force: true })
})
And('User verifies No upload documents Message', function (){
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
})
////////////////////////////////Verifying Comments field//////////////////////////////////////////////////
Given('User navigates to Comments in Checklist part', function (){
    cy.contains('Requirements').scrollIntoView().click({ force: true })
    cy.contains('Comments').scrollIntoView().should('be.visible')   
})
When('User clicks plus icon for comments', function (){
    cy.xpath(this.locator.checklistcomntbtn).click({ force: true })
})
Then('User verifies the Add comment fields', function (){
    cy.xpath(this.locator.checklistcomnttxtbx).should('be.visible', { force: true })
    cy.xpath(this.locator.checklistprivatecmnt).should('be.visible', { force: true })
    cy.xpath(this.locator.checklistcomntsavebtn).should('be.visible', { force: true })
})
And('User adds comment', function (){
    cy.xpath(this.locator.checklistcomnttxtbx).click({ force: true }).type(this.data.testdata)
})
And('User select private comment checkbox', function (){
    cy.wait(1000)
    cy.xpath(this.locator.checklistprivatecmnt).check({ force: true })
    
})
And('User clikcs on Save button and verifies the added comment', function (){
    cy.wait(2000)
    cy.xpath(this.locator.checklistcomntsavebtn).click({ force: true })
    cy.contains(this.data.testdata).scrollIntoView().should('be.visible')
})
And('User delete the comment', function (){
    cy.xpath(this.locator.checklistcmntdelete).click({ force: true })
})
And('User verifies deleted comment', function (){
    cy.contains(this.data.testdata).should('not.exist')
})
///////////////////////////////Verifying Search functionality in ALL Concepts///////////////////////////////////////////////
Given('User is WELL Checklist page', function (){
    cy.contains('Customize your checklist').scrollIntoView().should('be.visible')
    cy.contains('Support Handwashing').click({ force: true })
})
When('User selects Checklist part name in the verification field', function () {
    cy.xpath(this.locator.Verificationbtn).click({ force: true })
    cy.xpath(this.locator.FilterbyVerificationbtn).select(this.data.FilterbyVerification, { force: true })
})
Then('User verifies the search result', function () {
    cy.contains("Support Handwashing").should('be.visible')
})
And('User clicks on clear filter button', function () {
    cy.wait(2000)
    cy.xpath(this.locator.clearfilterbtn).click({ force: true })
    cy.xpath(this.locator.Verificationbtn).click({ force: true })
})
////////////////////////////Filling the Checklist for WELL Health Safety//////////////////////////////////////////////

And('User verifies Select Features page', function () {
    cy.contains('SELECT 15 FEATURES').should('be.visible')
    cy.contains('UPLOAD DOCUMENTS').should('be.visible')
    cy.contains('SUBMIT FOR REVIEW').should('be.visible')
    cy.contains('Customize your checklist').should('be.visible')
})
When('User selects pursue status as YES for 15 features', function () {
    cy.wait(2000)
    for(var i=1;i<=28;i++){
        cy.xpath(this.locator.hsrPursuestatusNo).click({ force: true })
        cy.wait(2000)
    }  
    for(var i=1;i<=16;i++){
        cy.xpath(this.locator.hsrPursuestatusYes).click({ force: true })
        cy.wait(2000)
    } 
})
Then('User verifies the PROGRESS bar after selecting the pursue status', function () {
    cy.wait(3000)
    cy.xpath(this.locator.prepursuesYes).invoke('text').then((status)=>{
        expect(status).to.equal('15 Yes')
        })
        cy.xpath(this.locator.prepursueMaybe).invoke('text').then((status)=>{
            expect(status.trim()).to.equal('0 Maybe')
            })
            cy.xpath(this.locator.prepursueNo).invoke('text').then((status)=>{
                expect(status).to.equal('12 No')
                })
                cy.xpath(this.locator.preconditionPercentage).invoke('text').then((status)=>{
                    expect(status).to.equal(' 100% ')
                    })
})

When('User upload document for Support Handwashing Feature', function () {
    cy.contains('Support Handwashing').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.FilterbyVerification, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(5000)

})
And('User add comment for Support Handwashing Feature', function () {
    cy.wait(2000)
    cy.xpath(this.locator.checklistcomntbtn).click({ force: true })
    cy.xpath(this.locator.checklistcomnttxtbx).type(this.data.testdata)
    cy.xpath(this.locator.checklistprivatecmnt).check({ force: true })
    cy.xpath(this.locator.checklistcomntsavebtn).click({ force: true })
    cy.contains(this.data.testdata).should('be.visible')
    cy.wait(2000)
    cy.contains('Support Handwashing').click({ force: true })
})
And('User upload document for Reduce Surface Contact Feature', function () {
    cy.wait(2000)
    cy.contains('Reduce Surface Contact').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPN, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Reduce Surface Contact').click({ force: true })
})
And('User upload document for Improve Cleaning Practices Feature', function () {
    cy.wait(2000)
    cy.contains('Improve Cleaning Practices').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Improve Cleaning Practices').click({ force: true })
})
And('User upload document for Select Preferred Cleaning Products Feature', function () {
    cy.wait(2000)
    cy.contains('Select Preferred Cleaning Products').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Select Preferred Cleaning Products').click({ force: true })
})
And('User upload document for Reduce Respiratory Particle Exposure Feature', function () {
    cy.wait(2000)
    cy.contains('Reduce Respiratory Particle Exposure').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Reduce Respiratory Particle Exposure').click({ force: true })
})
And('User upload document for Develop Emergency Preparedness Plan Part 1 Feature', function () {
    cy.wait(2000)
    cy.contains('Part 1').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Part 1').click({ force: true })
})
And('User upload document for Develop Emergency Preparedness Plan Part 2 Feature', function () {
    cy.wait(2000)
    cy.contains('Part 2').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Part 2').click({ force: true })
})
And('User upload document for Create Business Continuity Plan Feature', function () {
    cy.wait(2000)
    cy.contains('Create Business Continuity Plan').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Create Business Continuity Plan').click({ force: true })
})
And('User upload document for Plan for Healthy Re-Entry Feature', function () {
    cy.wait(2000)
    cy.contains('Plan for Healthy Re-Entry').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Plan for Healthy Re-Entry').click({ force: true })
})
And('User upload document for Provide Emergency Resources Feature', function () {
    cy.wait(2000)
    cy.contains('Provide Emergency Resources').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Emergency Resources').click({ force: true })
})
And('User upload document for Bolster Emergency Resilience Feature', function () {
    cy.wait(3000)
    cy.contains('Bolster Emergency Resilience').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Bolster Emergency Resilience').click({ force: true })
})
And('User upload document for Establish Health Entry Requirements Feature', function () {
    cy.wait(3000)
    cy.contains('Establish Health Entry Requirements').click({ force: true })
    cy.wait(3000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Establish Health Entry Requirements').click({ force: true })
})
And('User upload document for Provide Sick Leave Feature', function () {
    cy.wait(3000)
    cy.contains('Provide Sick Leave').scrollIntoView().click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Sick Leave').click({ force: true })
})
And('User upload document for Provide Health Benefits Feature', function () {
    cy.wait(3000)
    cy.contains('Provide Health Benefits').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Health Benefits').click({ force: true })
})
And('User upload document for Support Mental Health Recovery Feature', function () {
    cy.wait(3000)
    cy.contains('Support Mental Health Recovery').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistdocumenttype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Support Mental Health Recovery').click({ force: true })
})
And('User upload document for Promote Vaccines Feature', function () {
    cy.wait(3000)
    cy.contains('Promote Vaccines').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.checklistDocbtn).click({ force: true })
    cy.xpath(this.locator.checklistdoctype).select(this.data.checklistfeaturetype, { force: true })
    cy.xpath(this.locator.doclocationcountradio).click({ force: true })
    cy.xpath(this.locator.doclocationdropdown).select(1)
    cy.xpath(this.locator.checklistverificationdropdown).select(this.data.verificationmethodPOS, { force: true })
    cy.xpath(this.locator.checklistdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.checklistdocuploadsubmit).click({ force: true })
    cy.wait(3000)
    cy.contains('Promote Vaccines').click({ force: true })
})
Then('User verifies the upload documents for your selected features', function () {  
    cy.wait(3000)  
    cy.xpath(this.locator.checklistdocuploadcount).scrollIntoView().should('be.visible')       
})
And('User verifies the Submit for review option', function () {  
    cy.wait(3000)  
    cy.contains("SUBMIT FOR REVIEW").scrollIntoView().should('be.visible')
       
})