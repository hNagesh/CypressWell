import CommonMethod from '../../../support/CommonMethod'
beforeEach(() => {
    CommonMethod.beforeTest()
})
Given('User navigate to the Health-Safety Rating page by logging in to wellcertified', function () {
    CommonMethod.loginpage()
    cy.fixture('V2ProjectId').then(function (projectid) {
        this.projectid = projectid
        cy.xpath(this.locator.projectMenu).click()
        cy.wait(1000)
        cy.xpath(this.locator.Wellcertification).click()
        cy.xpath(this.locator.id).click({ force: true })
        cy.wait(2000)
        cy.xpath(this.locator.id).type(this.projectid.ChinaV2Project)
        cy.contains('Apply').click({ force: true })
        cy.wait(2000)
        cy.xpath(this.locator.projectstatus).invoke('text').then((status) => {
            expect(status).to.equal("Registered")
        })
        cy.contains(this.projectid.ChinaV2Project).click({ force: true })
        cy.contains('Health-Safety Rating').should('be.visible')
    })
})
When('User clicks on Health-Safety Rating tab', function () {
    cy.contains('Health-Safety Rating').should('be.visible').click({ force: true })
    cy.wait(2000)
})
Then('User verifies the Health-Safety Rating fields', function () {
    cy.contains('Re-open with confidence').should('be.visible')
    cy.xpath(this.locator.explorehealthsafety).should('be.visible')
    cy.xpath(this.locator.confirmreview).should('be.visible')
    cy.xpath(this.locator.reviewterms).should('be.visible')
    cy.xpath(this.locator.paytheinvoice).should('be.visible')
    cy.xpath(this.locator.completechecklist).should('be.visible')
    cy.xpath(this.locator.submitreview).should('be.visible')
    cy.xpath(this.locator.achieveandshare).should('be.visible')

})
/////////////////////////////Validating Health-Safety Rating fields////////////////////////////////////////////////////
Given('User is on Confirm Review Cycle Page', function () {
    cy.xpath(this.locator.healthcontinuebtn).should('be.visible')
})
And('User clicks on continue button', function () {
    cy.wait(2000)
    cy.xpath(this.locator.healthcontinuebtn).click({ force: true })
    cy.wait(2000)
})
And('User verifies Confirm Review Cycle Page', function () {
    cy.wait(2000)
    cy.contains('Confirm your enrollment fees').should('be.visible')
})
When('User checks the checkbox and clicks on View terms and conditions button', function () {
    cy.xpath(this.locator.checkbox).scrollIntoView().check({ force: true })
    cy.xpath(this.locator.viewtermsbtn).click({ force: true })
})
And('User redirects to Review terms and conditions page', function () {
    cy.contains('Review terms and conditions').should('be.visible')
})
And('User verifies Review terms and conditions page', function () {
    cy.contains('Review terms and conditions').should('be.visible')
})
And('User checks the Terms & Conditions checkbox and clicks on proceed button', function () {
    cy.xpath(this.locator.reviewcheckbox).scrollIntoView().check({ force: true })
    cy.xpath(this.locator.proceedbtn).click({ force: true })
})
And('User redirects to Pay the Invoice page', function () {
    cy.contains('Enrollment complete!').scrollIntoView().should('be.visible')
    cy.wait(2000)
})
And('User verifies Pay the Invoice page', function () {

})
And('User clicks on Go to account button', function () {
    cy.xpath(this.locator.gotoaccbtn).click({ force: true })
})
Then('User redirects to Select Features page', function () {
    cy.wait(3000)
    cy.contains('SELECT 15 FEATURES').should('be.visible')
})
/////////////////////////////////Validating Health-Safety Rating Checklist page///////////////////////////////////////////////
Given('User navigates to Health-Safety Rating Checklist page', function () {
    cy.contains('Customize your checklist').should('be.visible')
})
And('User verifies the Health-Safety Rating Checklist page fields', function () {
    cy.contains('SELECT 15 FEATURES').should('be.visible')
    cy.contains('UPLOAD DOCUMENTS').should('be.visible')
    cy.contains('SUBMIT FOR REVIEW').should('be.visible')
    cy.xpath(this.locator.toggleMetricbtn).should('be.visible')
    cy.xpath(this.locator.expandorcollapseRows).should('be.visible')
    cy.xpath(this.locator.downloadbtn).should('be.visible')
})

///////////////////////////////Validating PROGRESS bar Health-Safety Rating Checklist page/////////////////////////////////////////////////////
And('User verifies the PROGRESS bar for features', function () {
    cy.xpath(this.locator.hsrprogressbar).should('be.visible')
    cy.contains('15 Required Features').should('be.visible')
    cy.xpath(this.locator.prepursuesYes).invoke('text').then((status) => {
        expect(status).to.equal('0 Yes')
    })
    cy.xpath(this.locator.prepursueMaybe).invoke('text').then((status) => {
        expect(status.trim()).to.equal('0 Maybe')
    })
    cy.xpath(this.locator.prepursueNo).invoke('text').then((status) => {
        expect(status).to.equal('0 No')
    })
    cy.xpath(this.locator.preconditionPercentage).invoke('text').then((status) => {
        expect(status).to.equal(' 0% ')
    })
})
/////////////////////////////Validating PROGRESS bar by selecting pursue status//////////////////////////////////////////////////////////////////////////////
And('User verifies Select Features page', function () {
    cy.contains('SELECT 15 FEATURES').should('be.visible')
    cy.contains('UPLOAD DOCUMENTS').should('be.visible')
    cy.contains('SUBMIT FOR REVIEW').should('be.visible')
    cy.contains('Customize your checklist').should('be.visible')
})
When('User selects pursue status as YES', function () {
    cy.wait(2000)
    for (var i = 1; i <= 17; i++) {
        cy.xpath(this.locator.hsrpursuestatusYes).click({ force: true })
        cy.wait(2000)
    }
    for (var i = 18; i <= 27; i++) {
        cy.xpath(this.locator.hsrpursuestatusNo).click({ force: true })
        cy.wait(2000)
    }
    for (var i = 1; i <= 2; i++) {
        cy.xpath("(//*[@class='focus:outline-none duration-150 ease-in-out transition w-full my-auto flex justify-center py-2 px-2 text-sm font-medium transition duration-150 ease-in-out bg-white text-primary-600 border rounded-r-lg  transition-colors duration-300'])[1]").click({ force: true })
        cy.wait(2000)
    }
})
Then('User verifies the PROGRESS bar after selecting the pursue status', function () {
    cy.wait(3000)
    cy.xpath(this.locator.prepursuesYes).invoke('text').then((status) => {
        expect(status).to.equal('15 Yes')
    })
    cy.xpath(this.locator.prepursueMaybe).invoke('text').then((status) => {
        expect(status.trim()).to.equal('0 Maybe')
    })
    cy.xpath(this.locator.prepursueNo).invoke('text').then((status) => {
        expect(status).to.equal('12 No')
    })
    cy.xpath(this.locator.preconditionPercentage).invoke('text').then((status) => {
        expect(status).to.equal(' 100% ')
    })
})

////////////////////////////////Validating Upload document functionality for features/////////////////////////////////////////////////////////////////////
Given('User navigates to the Health-Safety Rating Checklist page', function () {
    cy.contains('UPLOAD DOCUMENTS').scrollIntoView().should('be.visible')
})
And('User verifies Upload documents page', function () {
    cy.contains('Upload documents for your selected features').should('be.visible')
})
When('User upload document for Improve Cleaning Practices Feature', function () {
    cy.contains('Improve Cleaning Practices').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(5000)

})
And('User add comment for Improve Cleaning Practices Feature', function () {
    cy.wait(2000)
    cy.xpath(this.locator.hsrcommentadd).click({ force: true })
    cy.xpath(this.locator.hsrtextarea).type(this.data.scorecardcmt)
    cy.xpath(this.locator.hsrprivatecmnt).check({ force: true })
    cy.xpath(this.locator.hsrcmntsavebtn).click({ force: true })
    cy.contains(this.data.scorecardcmt).should('be.visible')
    cy.wait(2000)
    cy.contains('Improve Cleaning Practices').click({ force: true })
})
And('User upload document for Select Preferred Cleaning Products Feature', function () {
    cy.wait(2000)
    cy.contains('Preferred Cleaning Products').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Preferred Cleaning Products').click({ force: true })
})
And('User upload document for Reduce Respiratory Particle Exposure Feature', function () {
    cy.wait(2000)
    cy.contains('Reduce Respiratory Particle Exposure').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwnOP, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Reduce Respiratory Particle Exposure').click({ force: true })
})
And('User upload document for Develop Emergency Preparedness Plan Part1 Feature', function () {
    cy.wait(2000)
    cy.contains('Part 1').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Part 1').click({ force: true })
})
And('User upload document for Develop Emergency Preparedness Plan part2 Feature', function () {
    cy.wait(2000)
    cy.contains('Part 2').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Part 2').click({ force: true })
})
And('User upload document for Create Business Continuity Plan Feature', function () {
    cy.wait(2000)
    cy.contains('Create Business Continuity Plan').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Create Business Continuity Plan').click({ force: true })
})
And('User upload document for Plan for Healthy Re-Entry Feature', function () {
    cy.wait(2000)
    cy.contains('Plan for Healthy Re-Entry').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Plan for Healthy Re-Entry').click({ force: true })
})
And('User upload document for Provide Emergency Resources Feature', function () {
    cy.wait(2000)
    cy.contains('Provide Emergency Resources').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Emergency Resources').click({ force: true })
})
And('User upload document for Bolster Emergency Resilience Feature', function () {
    cy.wait(2000)
    cy.contains('Bolster Emergency Resilience').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Bolster Emergency Resilience').click({ force: true })
})
And('User upload document for Establish Health Entry Requirements Feature', function () {
    cy.wait(2000)
    cy.contains('Provide Sick Leave').click({ force: true })
    cy.wait(2000)
    cy.contains('Provide Sick Leave').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('SE6').click({ force: true })
})
And('User upload document for Provide Sick Leave Feature', function () {
    cy.wait(5000)
    cy.contains('SE6').click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Sick Leave').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Sick Leave').click({ force: true })
})
And('User upload document for Provide Health Benefits Feature', function () {
    cy.wait(2000)
    cy.contains('SE6').click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Health Benefits').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Health Benefits').click({ force: true })
})
And('User upload document for Support Mental Health Recovery Feature', function () {
    cy.wait(2000)
    cy.contains('SE6').click({ force: true })
    cy.wait(3000)
    cy.contains('Support Mental Health Recovery').scrollIntoView().click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Support Mental Health Recovery').click({ force: true })
})
And('User upload document for Promote Vaccines Feature', function () {
    cy.wait(2000)
    cy.contains('SE6').click({ force: true })
    cy.wait(3000)
    cy.contains('Promote Vaccines').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Promote Vaccines').click({ force: true })
})
And('User upload document for Promote Smoke-Free Environment Feature', function () {
    cy.wait(2000)
    cy.contains('SE6').click({ force: true })
    cy.wait(3000)
    cy.contains('Promote a Smoke-Free Environment').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwn, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Promote a Smoke-Free Environment').click({ force: true })
})
And('User upload document for Promote Assess Ventilation Feature', function () {
    cy.wait(2000)
    cy.contains('SE6').click({ force: true })
    cy.wait(3000)
    cy.contains('Assess Ventilation').click({ force: true })
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.hsrverificationmethddropdwnPN, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Assess Ventilation').click({ force: true })
})
Then('User verifies the upload documents for your selected features', function () {
    cy.wait(3000)
    cy.xpath(this.locator.hsrdocuploadcount).scrollIntoView().should('be.visible')

})
/////////////////////////////Validating Submit for review in Health-Safety Rating////////////////////////////////////////////////////////////////
When('User clicks on Submit for Review button', function () {
    cy.wait(2000)
    cy.xpath(this.locator.submitforreviewbtn).click({ force: true })
})
Then('User will redirects to the review page', function () {
    cy.contains('Reviews').should('be.visible')
})
/////////////////////////////Validating Review in Health-Safety Rating/////////////////////////////////////////////////////////////////////////

And('User verifies the review page fields', function () {
    cy.xpath(this.locator.submitReview).should('be.visible')
    cy.contains('Submit Review').should('be.visible')
})
And('User clicks on Submit Reviews button', function () {
    cy.xpath(this.locator.submitReview).should('be.visible').click({ force: true })
})
And('User selects the project phase', function () {
    cy.xpath(this.locator.projectPhase).select("Final Documentation Review")
})
And('User enters the comment', function () {
    cy.xpath(this.locator.commentReview).type(this.data.ownerOrganization)
})
And('User selects the checkboxes', function () {
    cy.contains('By checking this box, I am confirming that we are submitting Health-safety rating for review along with this review.').click()
})
And('User clicks on submit button', function () {
    cy.xpath(this.locator.submitReviewDoc).should('be.visible').click({ force: true })
})
Then('User will be redirected to projects Reviews list', function () {
    cy.contains('Project Reviews WELLUIAutomation').should('be.visible')
})
