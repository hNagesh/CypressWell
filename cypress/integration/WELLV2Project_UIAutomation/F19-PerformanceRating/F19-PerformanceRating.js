import CommonMethod from '../../../support/CommonMethod'
beforeEach(() => {
    CommonMethod.beforeTest()
})
Given('User navigate to the Performance Rating page by logging in to wellcertified', function () {
    CommonMethod.loginpage()
    cy.fixture('V2ProjectId').then(function (projectid) {
        this.projectid = projectid
        cy.xpath(this.locator.projectMenu).click()
        cy.wait(1000)
        cy.xpath(this.locator.Wellcertification).click()
        cy.xpath(this.locator.id).click({ force: true })
        cy.wait(2000)
        cy.xpath(this.locator.id).type(this.projectid.ChinaV2Project)
        cy.contains('Apply').click({ force: true })
        cy.wait(2000)
        cy.xpath(this.locator.projectstatus).invoke('text').then((status) => {
            expect(status).to.equal("Registered")
        })
        cy.contains(this.projectid.ChinaV2Project).click({ force: true })
        cy.contains('Performance Rating').should('be.visible')
    })
})
When('User clicks on Performance Rating tab', function () {
    cy.wait(4000)
    cy.contains('Performance Rating').should('be.visible').click({ force: true })
    cy.wait(2000)
})
Then('User verifies the Performance Rating fields', function () {
    cy.contains('Lead with Performance').should('be.visible')
    cy.xpath(this.locator.explorehealthsafety).should('be.visible')
    cy.xpath(this.locator.confirmreview).should('be.visible')
    cy.xpath(this.locator.reviewterms).should('be.visible')
    cy.xpath(this.locator.paytheinvoice).should('be.visible')
    cy.xpath(this.locator.completechecklist).should('be.visible')
    cy.xpath(this.locator.submitreview).should('be.visible')
    cy.xpath(this.locator.achieveandshare).should('be.visible')

})
///////////////////////////////////Validating Performance Rating fields//////////////////////////////////////////////////////////////////
Given('User is on Confirm Review Cycle Page', function () {
    cy.xpath(this.locator.performancecontinuebtn).should('be.visible')
})
And('User clicks on continue button', function () {
    cy.wait(2000)
    cy.xpath(this.locator.performancecontinuebtn).click({ force: true })
    cy.wait(2000)
})
And('User verifies Confirm Review Cycle Page', function () {
    cy.wait(2000)
    cy.contains('Confirm your enrollment fees').should('be.visible')
})
When('User checks the checkbox and clicks on View terms and conditions button', function () {
    cy.xpath(this.locator.checkbox).scrollIntoView().check({ force: true })
    cy.xpath(this.locator.viewtermsbtn).click({ force: true })
})
And('User redirects to Review terms and conditions page', function () {
    cy.contains('Review terms and conditions').should('be.visible')
})
And('User verifies Review terms and conditions page', function () {
    cy.contains('Review terms and conditions').should('be.visible')
})
And('User checks the Terms & Conditions checkbox and clicks on proceed button', function () {
    cy.xpath(this.locator.reviewcheckbox).scrollIntoView().check({ force: true })
    cy.xpath(this.locator.proceedbtn).click({ force: true })
})
And('User redirects to Pay the Invoice page', function () {
    cy.contains('Enrollment complete!').scrollIntoView().should('be.visible')
    cy.wait(2000)
})
And('User verifies Pay the Invoice page', function () {

})
And('User clicks on Go to account button', function () {
    cy.xpath(this.locator.performancegotoaccbtn).click({ force: true })
})
Then('User redirects to Select Features page', function () {
    cy.wait(3000)
    cy.contains('SELECT 21 FEATURES').should('be.visible')
})
//////////////////////////////////Validating Performance Rating Checklist page///////////////////////////////////////////////////////////////////
Given('User navigates to Performance Rating Checklist page', function () {
    cy.contains('Customize your checklist').should('be.visible')
})
And('User verifies the Performance Rating Checklist page fields', function () {
    cy.contains('SELECT 21 FEATURES').should('be.visible')
    cy.contains('UPLOAD DOCUMENTS').should('be.visible')
    cy.contains('SUBMIT FOR REVIEW').should('be.visible')
    cy.xpath(this.locator.toggleMetricbtn).should('be.visible')
    cy.xpath(this.locator.expandorcollapseRows).should('be.visible')
    cy.xpath(this.locator.downloadbtn).should('be.visible')
})
////////////////////////////////Validating PROGRESS bar Performance Rating Checklist page/////////////////////////////////////////////////////////////////////
And('User verifies the PROGRESS bar for features', function () {
    cy.xpath(this.locator.hsrprogressbar).should('be.visible')
    cy.contains('21 Required Features').should('be.visible')
    cy.xpath(this.locator.prepursuesYes).invoke('text').then((status) => {
        expect(status).to.equal('0 Yes')
    })
    cy.xpath(this.locator.prepursueMaybe).invoke('text').then((status) => {
        expect(status.trim()).to.equal('0 Maybe')
    })
    cy.xpath(this.locator.prepursueNo).invoke('text').then((status) => {
        expect(status).to.equal('0 No')
    })
    cy.xpath(this.locator.preconditionPercentage).invoke('text').then((status) => {
        expect(status).to.equal(' 0% ')
    })
})
////////////////////////////////Validating PROGRESS bar by selecting pursue status/////////////////////////////////////////////////////////////////////
And('User verifies Select Features page', function () {
    cy.contains('SELECT 21 FEATURES').should('be.visible')
    cy.contains('UPLOAD DOCUMENTS').should('be.visible')
    cy.contains('SUBMIT FOR REVIEW').should('be.visible')
    cy.contains('Customize your checklist').should('be.visible')
})
When('User selects pursue status as YES', function () {
    cy.wait(2000)
    for (var i = 1; i <= 36; i++) {
        cy.xpath("(//*[@class='focus:outline-none duration-150 ease-in-out transition w-full my-auto flex justify-center py-2 px-2 text-sm font-medium transition duration-150 ease-in-out bg-white text-primary-600 border rounded-r-lg  transition-colors duration-300'])[1]").click({ force: true })
        cy.wait(2000)
    }
    for (var j = 1; j <= 21; j++) {
        cy.xpath("(//*[@class='focus:outline-none duration-150 ease-in-out transition w-full my-auto flex justify-center py-2 px-2 text-sm font-medium transition duration-150 ease-in-out bg-white text-primary-600 border rounded-l-lg transition-colors duration-300'])[1]").click({ force: true })
        cy.wait(2000)
    }
})
Then('User verifies the PROGRESS bar after selecting the pursue status', function () {
    cy.wait(3000)
    cy.xpath(this.locator.prepursuesYes).invoke('text').then((status) => {
        expect(status).to.equal('21 Yes')
    })
    cy.xpath(this.locator.prepursueMaybe).invoke('text').then((status) => {
        expect(status.trim()).to.equal('0 Maybe')
    })
    cy.xpath(this.locator.prepursueNo).invoke('text').then((status) => {
        expect(status).to.equal('15 No')
    })
    cy.xpath(this.locator.preconditionPercentage).invoke('text').then((status) => {
        expect(status).to.equal(' 100% ')
    })
})
/////////////////////////////////////Validating Upload document functionality for features////////////////////////////////////////////////////////////////
Given('User navigates to the Performance Rating Checklist page', function () {
    cy.contains('UPLOAD DOCUMENTS').scrollIntoView().should('be.visible')
})
And('User verifies Upload documents page', function () {
    cy.contains('Upload documents for your selected features').should('be.visible')
})
When('User upload document for Meet Thresholds for Particulate Matter feature', function () {
    cy.contains('Meet Thresholds for Particulate Matter').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)

})
And('User add comment for Meet Thresholds for Particulate Matter feature', function () {
    cy.wait(2000)
    cy.xpath(this.locator.hsrcommentadd).click({ force: true })
    cy.xpath(this.locator.hsrtextarea).type(this.data.scorecardcmt)
    cy.xpath(this.locator.hsrprivatecmnt).check({ force: true })
    cy.xpath(this.locator.hsrcmntsavebtn).click({ force: true })
    cy.contains(this.data.scorecardcmt).should('be.visible')
    cy.wait(2000)
    cy.contains('Meet Thresholds for Particulate Matter').click({ force: true })
})
And('User upload document for Meet Enhanced Thresholds for Particulate Matter feature', function () {
    cy.contains('Meet Enhanced Thresholds for Particulate Matter').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Enhanced Thresholds for Particulate Matter').click({ force: true })
})
And('User upload document for Meet Thresholds for Organic Gases feature', function () {
    cy.contains('Meet Thresholds for Organic Gases').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Thresholds for Organic Gases').click({ force: true })
})
And('User upload document for Meet Enhanced Thresholds for Organic Gases feature', function () {
    cy.contains('Meet Enhanced Thresholds for Organic Gases').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Enhanced Thresholds for Organic Gases').click({ force: true })
})
And('User upload document for Meet Thresholds for Inorganic Gases feature', function () {
    cy.contains('Meet Thresholds for Inorganic Gases').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Thresholds for Inorganic Gases').click({ force: true })
})
And('User upload document for Meet Enhanced Thresholds for Inorganic Gases feature', function () {
    cy.contains('Meet Enhanced Thresholds for Inorganic Gases').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Enhanced Thresholds for Inorganic Gases').click({ force: true })
})
And('User upload document for Ensure Adequate Ventilation feature', function () {
    cy.contains('Ensure Adequate Ventilation').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.performanceratingverificationSD, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Ensure Adequate Ventilation').click({ force: true })
})
And('User upload document for Increase Outdoor Air Supply feature', function () {
    cy.contains('Increase Outdoor Air Supply').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.performanceratingverificationSD, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Increase Outdoor Air Supply').click({ force: true })
})
And('User upload document for Meet Thresholds for Radon feature', function () {
    cy.contains('Meet Thresholds for Radon').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.performanceratingverificationSD, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Thresholds for Radon').click({ force: true })
})
And('User upload document for Verify Water Quality Indicators feature', function () {
    cy.contains('Verify Water Quality Indicators').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Verify Water Quality Indicators').click({ force: true })
})
And('User upload document for Meet Chemical Thresholds feature', function () {
    cy.contains('Meet Chemical Thresholds').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Chemical Thresholds').click({ force: true })
})
And('User upload document for Meet Thresholds for Organics and Pesticides feature', function () {
    cy.contains('Meet Thresholds for Organics and Pesticides').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodTDA, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Thresholds for Organics and Pesticides').click({ force: true })
})
And('User upload document for Meet Thresholds for Drinking Water Taste feature', function () {
    cy.contains('Meet Thresholds for Drinking Water Taste').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Thresholds for Drinking Water Taste').click({ force: true })
})
And('User upload document for Provide Visual Acuity feature', function () {
    cy.contains('Provide Visual Acuity').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Visual Acuity').click({ force: true })
})
And('User upload document for Lighting for Day-Active People feature', function () {
    cy.contains('Lighting for Day-Active People').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Lighting for Day-Active People').click({ force: true })
})
And('User upload document for Provide Acceptable Thermal Environment feature', function () {
    cy.contains('Provide Acceptable Thermal Environment').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Provide Acceptable Thermal Environment').click({ force: true })
})
And('User upload document for Manage Relative Humidity feature', function () {
    cy.contains('Manage Relative Humidity').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Manage Relative Humidity').click({ force: true })
})
And('User upload document for Limit Background Noise Levels feature', function () {
    cy.contains('Limit Background Noise Levels').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Limit Background Noise Levels').click({ force: true })
})
And('User upload document for Achieve Sound Isolation at Walls feature', function () {
    cy.contains('Achieve Sound Isolation at Walls').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Achieve Sound Isolation at Walls').click({ force: true })
})
And('User upload document for Achieve Reverberation Time Thresholds feature', function () {
    cy.contains('Achieve Reverberation Time Thresholds').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodPT, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Achieve Reverberation Time Thresholds').click({ force: true })
})
And('User upload document for Meet Thresholds for Impact Noise Rating feature', function () {
    cy.contains('Meet Thresholds for Impact Noise Rating').click({ force: true })
    cy.wait(2000)
    cy.contains('Requirements').click({ force: true })
    cy.wait(2000)
    cy.contains('Documents').scrollIntoView().should('be.visible')
    cy.contains('You have not uploaded any documentation for this feature.').scrollIntoView().should('be.visible')
    cy.xpath(this.locator.hsrdocumentuploadbtn).scrollIntoView().click({ force: true })
    cy.xpath(this.locator.hsrverificationmethddropdwn).select(this.data.verificationmethodTDA, { force: true })
    cy.xpath(this.locator.hsrdocupload).attachFile(this.data.Uploadfile, { force: true })
    cy.xpath(this.locator.hsrdocuploadbtn).click({ force: true })
    cy.wait(3000)
    cy.contains('Meet Thresholds for Impact Noise Rating').click({ force: true })
})
Then('User verifies the upload documents for your selected features', function () {
    cy.wait(3000)
    cy.xpath(this.locator.hsrdocuploadcount).scrollIntoView().should('be.visible')

})